#!/bin/sh

ARM=/dev/shm/on-setarm

incr_shot() {
        shot=0
        SHOT=/etc/acq400/0/${1:-shot}
        if [ -e ${SHOT} ]; then
                shot=$(cat ${SHOT})
        fi
        let shot=$shot+1
        echo $shot > ${SHOT}
}

force_close() {
	CRF=/sys/module/acq420fmc/parameters/continuous_reader
	while [ -e $CRF ] && [ $(cat $CRF) -ne 0 ]; do
		acq400_teardown
	done
}
source /usr/local/bin/init_stream

rm -f $ARM				# avoid race to re-arm
force_close
fix_state; cat /dev/shm/state
while [ ! -e $ARM ]; do
	usleep 10000
done

init_stream 0

source /dev/shm/transient_settings

[ -e /etc/acq400/sysconfig/acq400_transient.conf ] && source /etc/acq400/sysconfig/acq400_transient.conf

ARGS="--state-file /dev/shm/state $*"

if [ "x$OSAM" != "x" ] && [ $OSAM -gt 0 ]; then
# negative code means "one sample per buffer". This is what we want
	ARGS="$ARGS -O -$OSAM"	
fi

STREAM=acq400_stream
if [ -e /mnt/local/acq400_stream ]; then
	STREAM=/mnt/local/acq400_stream
fi
CMD="$STREAM --verbose=0 $TRANS_OPTS --soft-trigger=$SOFT_TRIGGER \
	--demux $DEMUX --pre=$PRE --post=$POST $ARGS 0"
	
[ -e /dev/shm/nopostshot ] && rm /dev/shm/nopostshot

if [ -e /etc/preshot.d ]; then
	for file in /etc/preshot.d/*
	do
		[ -x $file ] && $file
	done
fi

echo run $CMD
echo $CMD >/var/log/faultmon_cmd.log
$CMD

if [ -e /dev/shm/nopostshot ]; then
	rm /dev/shm/nopostshot
else
	if [ -e /etc/postshot.d ]; then
	        for file in /etc/postshot.d/*
        	do
                	[ -x $file ] && $file
	        done
	fi

	if [ -e /mnt/local/postshot ]; then 
		retry=0; MAXRETRY=3
		/mnt/local/postshot

		while [ $? -ne 0 ]; do
			echo "WARNING. $retry/$MAXTRY postshot failed"
	                retry=$(($retry+1))
	                if [ $retry -ge $MAXRETRY ];then
	                        echo "ERROR: too many retries, please fix by hand"
	                        exit 1
	                fi
	                sleep 2
	                /mnt/local/postshot
	       done
	       [ $retry -ne 0 ] && echo "SUCCESS after $retry attempts"
	fi
fi

force_close
incr_shot shot_complete

exec /usr/local/bin/faultmon

